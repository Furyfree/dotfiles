#!/bin/bash

# setup-desktop-entries: Setup desktop entries and icons
# Usage: ./setup-desktop-entries

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

print_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DOTFILES_DIR="$(dirname "$SCRIPT_DIR")"
DESKTOP_ENTRIES_DIR="$DOTFILES_DIR/linux/.local/share/applications"

# Create symlink function
create_symlink() {
    local source="$1"
    local target="$2"
    local target_dir="$(dirname "$target")"

    # Create target directory if it doesn't exist
    if [[ ! -d "$target_dir" ]]; then
        mkdir -p "$target_dir"
        print_success "Created directory: $target_dir"
    fi

    # Remove existing file/symlink if it exists
    if [[ -e "$target" || -L "$target" ]]; then
        if [[ -L "$target" ]]; then
            print_warning "Removing existing symlink: $target"
        else
            print_warning "Backing up existing file: $target -> $target.backup"
            mv "$target" "$target.backup"
        fi
        rm -f "$target"
    fi

    # Create symlink
    ln -sf "$source" "$target"
    print_success "Linked: $target -> $source"
}

echo -e "${BLUE}═══════════════════════════════════════${NC}"
echo -e "${WHITE}  🎯 Desktop Entries Setup${NC}"
echo -e "${BLUE}═══════════════════════════════════════${NC}"

# Check if desktop entries directory exists
if [[ ! -d "$DESKTOP_ENTRIES_DIR" ]]; then
    print_error "Desktop entries directory not found: $DESKTOP_ENTRIES_DIR"
    exit 1
fi

print_step "Setting up desktop entries..."

# Create applications directory
APPLICATIONS_DIR="$HOME/.local/share/applications"
mkdir -p "$APPLICATIONS_DIR"
print_success "Created applications directory: $APPLICATIONS_DIR"

# Link individual desktop files
desktop_count=0
for desktop_file in "$DESKTOP_ENTRIES_DIR"/*.desktop; do
    if [[ -f "$desktop_file" ]]; then
        filename="$(basename "$desktop_file")"
        print_step "Processing desktop file: $filename"
        create_symlink "$desktop_file" "$APPLICATIONS_DIR/$filename"
        ((desktop_count++))
        print_success "Processed $filename ($desktop_count files so far)"
    else
        print_warning "Skipping non-file: $desktop_file"
    fi
done

if [[ $desktop_count -eq 0 ]]; then
    print_warning "No desktop files found in $DESKTOP_ENTRIES_DIR"
else
    print_success "Linked $desktop_count desktop entries"
fi

# Link icons directory
print_step "Checking for icons directory at: $DESKTOP_ENTRIES_DIR/icons"
if [[ -d "$DESKTOP_ENTRIES_DIR/icons" ]]; then
    print_step "Setting up application icons..."
    create_symlink "$DESKTOP_ENTRIES_DIR/icons" "$HOME/.local/share/applications/icons"

    # Count icons
    icon_count=$(find "$DESKTOP_ENTRIES_DIR/icons" -name "*.png" -o -name "*.svg" | wc -l)
    print_success "Linked icons directory with $icon_count icons"
else
    print_warning "Icons directory not found: $DESKTOP_ENTRIES_DIR/icons"
fi

# Update desktop database
print_step "Updating desktop database..."
if command -v update-desktop-database &>/dev/null; then
    update-desktop-database "$APPLICATIONS_DIR"
    print_success "Desktop database updated"
else
    print_warning "update-desktop-database not found, skipping..."
fi

print_success "Desktop entries setup completed!"
echo -e "${WHITE}All desktop entries and icons have been symlinked.${NC}"
echo -e "${WHITE}New applications should now appear in your application launcher.${NC}"
